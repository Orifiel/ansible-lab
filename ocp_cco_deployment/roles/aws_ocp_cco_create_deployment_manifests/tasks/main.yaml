---
- name: Remove all content in install directoy, if it exists
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ install_directory }}/{{ ocp_cluster_name }}"
#    - "{{ install_directory }}/{{ ocp_cluster_name }}-credentials-requests"
    - "{{ install_directory }}/{{ ocp_cluster_name }}-secret-manifests"

- name: Create install directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ install_directory }}/{{ ocp_cluster_name }}"
#    - "{{ install_directory }}/{{ ocp_cluster_name }}-credentials-requests"
    - "{{ install_directory }}/{{ ocp_cluster_name }}-secret-manifests"

#- name: Generate public and private RSA key files used to set up the OpenID Connect provider for the cluster
#  ansible.builtin.command: "{{ install_directory }}/ccoctl aws create-key-pair"
#  args:
#    chdir: "{{ install_directory }}/{{ ocp_cluster_name }}-credentials-requests"
#
#- name: Create an OpenID Connect identity provider and S3 bucket on AWS
#  ansible.builtin.command: "{{ install_directory }}/ccoctl aws create-identity-provider --name={{ ocp_cluster_name }} --region={{ ocp_cluster_region }} --public-key-file=serviceaccount-signer.public"
#  args:
#    chdir: "{{ install_directory }}/{{ ocp_cluster_name }}-credentials-requests"
#
#- name: Extract the list of CredentialsRequest objects
#  ansible.builtin.command: "{{ install_directory }}/oc adm release extract --credentials-requests --cloud=aws --to=credrequests --from=quay.io/openshift-release-dev/ocp-release@sha256:{{ ocp_release_version }}"
#  args:
#    chdir: "{{ install_directory }}/{{ ocp_cluster_name }}-credentials-requests"
#
#- name: Create an OpenID Connect identity provider and S3 bucket on AWS
#  ansible.builtin.command: "{{ install_directory }}/ccoctl aws create-iam-roles --name={{ ocp_cluster_name }} --region={{ ocp_cluster_region }} --credentials-requests-dir=credrequests --identity-provider-arn=arn:aws:iam::{{ aws_account_id }}:oidc-provider/{{ ocp_cluster_name }}-oidc.s3.{{ ocp_cluster_region }}.amazonaws.com"
#  args:
#    chdir: "{{ install_directory }}/{{ ocp_cluster_name }}-credentials-requests"
#
- name: Generate Install-Config
  ansible.builtin.template:
    src: templates/install-config.yaml.j2
    dest: "{{ install_directory }}/{{ ocp_cluster_name }}/install-config.yaml"

- name: Create backup copy of install-config.yaml
  ansible.builtin.command: "cp {{ install_directory }}/{{ ocp_cluster_name }}/install-config.yaml {{ install_directory }}/{{ ocp_cluster_name }}/cluster-install-config.yaml"

- name: Create installation manifests
  ansible.builtin.command: "{{ install_directory }}/openshift-install create manifests"
  args:
    chdir: "{{ install_directory }}/{{ ocp_cluster_name }}"

- name: Remove lines from cluster-dns-02-config.yml
  ansible.builtin.lineinfile:
    path: "{{ install_directory }}/{{ ocp_cluster_name }}/manifests/cluster-dns-02-config.yml"
    regexp: "{{ item }}"
    state: absent
  loop:
    - '^  privateZone:'
    - '^    id:'

- name: Consolidate all manifests in OCP install directory
  ansible.builtin.shell: "cp {{ install_directory }}/{{ ocp_cluster_name }}-credentials-requests/manifests/* {{ install_directory }}/{{ ocp_cluster_name }}/manifests/"

- name: Generate public and private RSA key files used to set up the OpenID Connect provider for the cluster
  ansible.builtin.command: "cp {{ install_directory }}/{{ ocp_cluster_name }}/manifests/{{ item }} {{ install_directory }}/{{ ocp_cluster_name }}-secret-manifests"
  loop:
    - cluster-dns-02-config.yml
    - cluster-authentication-02-config.yaml
    - openshift-cloud-credential-operator-cloud-credential-operator-iam-ro-creds-credentials.yaml
    - openshift-cloud-network-config-controller-cloud-credentials-credentials.yaml
    - openshift-cluster-csi-drivers-ebs-cloud-credentials-credentials.yaml
    - openshift-config-secret-pull-secret.yaml
    - openshift-image-registry-installer-cloud-credentials-credentials.yaml
    - openshift-ingress-operator-cloud-credentials-credentials.yaml
    - openshift-machine-api-aws-cloud-credentials-credentials.yaml
